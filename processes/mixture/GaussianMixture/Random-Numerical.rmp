<?xml version="1.0" encoding="UTF-8"?><process version="9.10.008">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="9.10.008" expanded="true" name="Process">
    <parameter key="logverbosity" value="init"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true">
      <operator activated="true" class="generate_data" compatibility="9.10.008" expanded="true" height="68" name="Generate Data" width="90" x="179" y="34">
        <parameter key="target_function" value="random"/>
        <parameter key="number_examples" value="100"/>
        <parameter key="number_of_attributes" value="5"/>
        <parameter key="attributes_lower_bound" value="-10.0"/>
        <parameter key="attributes_upper_bound" value="10.0"/>
        <parameter key="gaussian_standard_deviation" value="10.0"/>
        <parameter key="largest_radius" value="10.0"/>
        <parameter key="use_local_random_seed" value="true"/>
        <parameter key="local_random_seed" value="1992"/>
        <parameter key="datamanagement" value="double_array"/>
        <parameter key="data_management" value="auto"/>
      </operator>
      <operator activated="true" class="select_attributes" compatibility="9.10.008" expanded="true" height="82" name="Select Attributes" width="90" x="313" y="34">
        <parameter key="attribute_filter_type" value="single"/>
        <parameter key="attribute" value="label"/>
        <parameter key="attributes" value=""/>
        <parameter key="use_except_expression" value="false"/>
        <parameter key="value_type" value="attribute_value"/>
        <parameter key="use_value_type_exception" value="false"/>
        <parameter key="except_value_type" value="time"/>
        <parameter key="block_type" value="attribute_block"/>
        <parameter key="use_block_type_exception" value="false"/>
        <parameter key="except_block_type" value="value_matrix_row_start"/>
        <parameter key="invert_selection" value="true"/>
        <parameter key="include_special_attributes" value="true"/>
      </operator>
      <operator activated="true" class="python_scripting:python_learner" compatibility="9.10.002" expanded="true" height="103" name="Gaussian Mixture Model  (2)" width="90" x="447" y="34">
        <parameter key="editable" value="false"/>
        <parameter key="operator" value="{&#13;&#10;  &quot;name&quot; : &quot;Gaussian Mixture Model &quot;,&#13;&#10;  &quot;dropSpecial&quot; : true,&#13;&#10;  &quot;capabilities&quot; : [ &quot;numerical attributes&quot;, &quot;unlabeled&quot; ],&#13;&#10;  &quot;parameters&quot; : [ {&#13;&#10;    &quot;name&quot; : &quot;n_components&quot;,&#13;&#10;    &quot;type&quot; : &quot;integer&quot;,&#13;&#10;    &quot;description&quot; : &quot;The number of mixture components\.&quot;,&#13;&#10;    &quot;value&quot; : 2&#13;&#10;  }, {&#13;&#10;    &quot;name&quot; : &quot;covariance_type&quot;,&#13;&#10;    &quot;type&quot; : &quot;category&quot;,&#13;&#10;    &quot;description&quot; : &quot;Describing the type of covariance parameters to use&quot;,&#13;&#10;    &quot;categories&quot; : [ &quot;full&quot;, &quot;tied&quot;, &quot;diag&quot;, &quot;spherical&quot; ],&#13;&#10;    &quot;value&quot; : &quot;full&quot;&#13;&#10;  }, {&#13;&#10;    &quot;name&quot; : &quot;tol&quot;,&#13;&#10;    &quot;type&quot; : &quot;real&quot;,&#13;&#10;    &quot;description&quot; : &quot;The convergence threshold\. EM iterations will stop when the lower bound average gain is below this threshold\.&quot;,&#13;&#10;    &quot;value&quot; : 0\.001&#13;&#10;  }, {&#13;&#10;    &quot;name&quot; : &quot;reg_covar&quot;,&#13;&#10;    &quot;type&quot; : &quot;real&quot;,&#13;&#10;    &quot;description&quot; : &quot;Non-negative regularization added to the diagonal of covariance\. Allows to assure that the covariance matrices are all positive\.&quot;,&#13;&#10;    &quot;value&quot; : 0\.2&#13;&#10;  }, {&#13;&#10;    &quot;name&quot; : &quot;max_iter&quot;,&#13;&#10;    &quot;type&quot; : &quot;integer&quot;,&#13;&#10;    &quot;description&quot; : &quot;The number of EM iterations to perform\.&quot;,&#13;&#10;    &quot;value&quot; : 100&#13;&#10;  }, {&#13;&#10;    &quot;name&quot; : &quot;n_init&quot;,&#13;&#10;    &quot;type&quot; : &quot;integer&quot;,&#13;&#10;    &quot;description&quot; : &quot;The number of initializations to perform\. The best results are kept\.&quot;,&#13;&#10;    &quot;value&quot; : 1&#13;&#10;  }, {&#13;&#10;    &quot;name&quot; : &quot;init_params&quot;,&#13;&#10;    &quot;type&quot; : &quot;category&quot;,&#13;&#10;    &quot;description&quot; : &quot;The method used to initialize the weights, the means and the precisions\.&quot;,&#13;&#10;    &quot;categories&quot; : [ &quot;kmeans&quot;, &quot;random&quot; ],&#13;&#10;    &quot;value&quot; : &quot;kmeans&quot;&#13;&#10;  }, {&#13;&#10;    &quot;name&quot; : &quot;random_state&quot;,&#13;&#10;    &quot;type&quot; : &quot;integer&quot;,&#13;&#10;    &quot;description&quot; : &quot;The number of base estimators in the ensemble\.&quot;,&#13;&#10;    &quot;value&quot; : 100&#13;&#10;  } ],&#13;&#10;  &quot;outputs&quot; : [ {&#13;&#10;    &quot;name&quot; : &quot;Performance&quot;,&#13;&#10;    &quot;type&quot; : &quot;table&quot;&#13;&#10;  } ]&#13;&#10;}.import pandas as pd&#10;from sklearn\.mixture import GaussianMixture&#10;&#10;&#10;def rm_train(X, params):&#10;    print(params)&#10;    model = GaussianMixture(**params)\.fit(X)&#10;    bic_score = model\.bic(X)&#10;    return model, pd\.DataFrame({&quot;BIC&quot;: bic_score},index=[1])&#10;&#10;&#10;def rm_apply(X, model):&#10;    prediction = pd\.DataFrame(model\.score_samples(X))&#10;    prediction\.columns = ['Anomaly_Score']&#10;    return prediction&#10;"/>
        <parameter key="use_default_python" value="true"/>
        <parameter key="package_manager" value="conda (anaconda)"/>
        <parameter key="n_components" value="2"/>
        <parameter key="covariance_type" value="full"/>
        <parameter key="tol" value="0.001"/>
        <parameter key="reg_covar" value="0.2"/>
        <parameter key="max_iter" value="100"/>
        <parameter key="n_init" value="1"/>
        <parameter key="init_params" value="kmeans"/>
        <parameter key="random_state" value="100"/>
      </operator>
      <connect from_op="Generate Data" from_port="output" to_op="Select Attributes" to_port="example set input"/>
      <connect from_op="Select Attributes" from_port="example set output" to_op="Gaussian Mixture Model  (2)" to_port="training set"/>
      <connect from_op="Gaussian Mixture Model  (2)" from_port="model" to_port="result 1"/>
      <connect from_op="Gaussian Mixture Model  (2)" from_port="Performance" to_port="result 2"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
      <portSpacing port="sink_result 3" spacing="0"/>
    </process>
  </operator>
</process>
